{"version":3,"file":"static/js/604.dd0a73c3.chunk.js","mappings":"iKAuBA,IApB0B,WACxB,OAA0BA,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BL,GAAS,SAACM,GAAD,QAAoBA,OAC5B,KAGH,OADU,IAAVP,GAAeE,EAAS,KACjB,kBAAMM,cAAcH,MAC1B,CAACL,EAAOE,KAET,SAAC,IAAD,CAAWO,UAAU,kBAArB,UACE,+CAAuBT,EAAvB,kB,kGCRN,UANkB,WAChB,IAAQU,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,MAAtCF,KAER,OAAOA,GAAQA,EAAKG,OAAQ,SAAC,KAAD,KAAa,SAAC,IAAD,M,4ICArCC,EAAyBC,EAAAA,YAAiB,WAO7CC,GAAQ,IANTC,EAMS,EANTA,SACAC,EAKS,EALTA,MAKS,IAHTC,GAAIC,OAGK,MAHO,MAGP,EAFTX,EAES,EAFTA,UACGY,GACM,YACHC,GAASC,EAAAA,EAAAA,IAAmBN,EAAU,aACtCO,EAA0B,kBAAVN,EAAP,WAAgCA,GAAU,SACzD,OAAoBO,EAAAA,EAAAA,KAAKL,GAAD,QAAC,QACvBJ,IAAKA,GACFK,GAFmB,IAGtBZ,UAAWiB,GAAAA,CAAWjB,EAAWS,EAAQ,GAAH,OAAMI,GAAN,OAAeE,GAAWF,SAGpER,EAAUa,YAAc,YACxBb,EAAUc,aApBW,CACnBV,OAAO,GAoBT","sources":["components/Routes/LoadingToReDirect.js","components/Routes/UserRoute.js","../node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { useNavigate } from 'react-router-dom'\nconst LoadingToReDirect = () => {\n  const [count, setCount] = useState(5)\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount((currentCount) => --currentCount)\n    }, 1000)\n\n    count === 0 && navigate('/')\n    return () => clearInterval(interval)\n  }, [count, navigate])\n  return (\n    <Container className='p-5 text-center'>\n      <p>Redirecting You in {count} seconds</p>\n    </Container>\n  )\n}\n\nexport default LoadingToReDirect\n","import React from 'react'\nimport { Outlet } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport LoadingToReDirect from './LoadingToReDirect'\nconst UserRoute = () => {\n  const { user } = useSelector((state) => ({ ...state }))\n\n  return user && user.token ? <Outlet /> : <LoadingToReDirect />\n}\n\nexport default UserRoute\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;"],"names":["useState","count","setCount","navigate","useNavigate","useEffect","interval","setInterval","currentCount","clearInterval","className","user","useSelector","state","token","Container","React","ref","bsPrefix","fluid","as","Component","props","prefix","useBootstrapPrefix","suffix","_jsx","classNames","displayName","defaultProps"],"sourceRoot":""}