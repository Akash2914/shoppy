{"version":3,"file":"static/js/320.662d3b09.chunk.js","mappings":"6NA+GA,UAvGa,WACX,OAAuBA,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,MAA5CC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAERC,GAAWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MA4CjB,OACE,gBAAKC,UAAU,kBAAf,UACE,iBAAKA,UAAU,MAAf,WACE,iBAAKA,UAAU,WAAf,WACE,0BAAKL,EAAKM,OAAV,yBAEEN,EAAKM,QAvBb,mBAAOD,UAAU,uBAAjB,WACE,kBAAOA,UAAU,cAAjB,UACE,2BACE,eAAIE,MAAM,MAAV,oBACA,eAAIA,MAAM,MAAV,oBACA,eAAIA,MAAM,MAAV,oBACA,eAAIA,MAAM,MAAV,oBACA,eAAIA,MAAM,MAAV,oBACA,eAAIA,MAAM,MAAV,yBAGHP,EAAKQ,KAAI,SAACC,GAAD,OACR,SAAC,KAAD,CAAmCC,QAASD,GAAhBA,EAAEE,YAY1B,qDAC0B,SAAC,KAAD,CAAMC,GAAG,IAAT,sCAM9B,gBAAKP,UAAU,WAAf,UACE,4CACgB,mBACd,oCACCL,EAAKQ,KAAI,SAACK,EAAGC,GAAJ,aACR,0BACE,0BACGD,EAAEE,MADL,MACeF,EAAEG,MADjB,sBAC6BH,EAAEI,MAAQJ,EAAEG,aADzC,aAC4B,EAAqBE,QAAQ,OAFjDJ,OAMZ,kBAVF,YAWU,kCAnETd,EAAKmB,QAAO,SAACC,EAAcC,GAChC,OAAQD,GAAwB,OAATC,QAAS,IAATA,OAAA,EAAAA,EAAWL,QAAX,OAAmBK,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAWJ,SACpD,OAkEK,kBACChB,GACC,SAAC,IAAD,CACEqB,MAAO,CAAEC,eAAgB,QACzBC,SAAUxB,EAAKM,OAAS,EACxBmB,QApEQ,YACG,IAAnBxB,EAAKyB,UACPC,EAAAA,GAAAA,MAAY,yDAEZC,EAAAA,EAAAA,IAAS5B,EAAMC,EAAK4B,OACjBC,MAAK,SAACC,GAEDA,EAAIC,KAAKC,IACX/B,EAAS,gBAGZgC,OAAM,SAACC,GACNC,QAAQC,IAAI,kBAAmBF,GAC/BR,EAAAA,GAAAA,MAAY,+BAoDR,kCAQA,SAAC,IAAD,WACE,SAAC,KAAD,CACEf,GAAI,CACF0B,SAAU,SACVvC,MAAO,CAAEwC,KAAM,SAEjBjB,MAAO,CAAEC,eAAgB,OAAQiB,MAAO,SAL1C","sources":["pages/Cart.js"],"sourcesContent":["import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\nimport { ProductCardInCheckout } from '../components'\nimport { userCart } from '../api/user'\nimport { toast } from 'react-toastify'\nconst Cart = () => {\n  const { cart, user } = useSelector((state) => ({ ...state }))\n\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const getTotal = () => {\n    return cart.reduce((currentValue, nextValue) => {\n      return (currentValue + nextValue?.count * nextValue?.price)\n    }, 0)\n  }\n\n  const saveOrderToDb = () => {\n    if (user.isBlocked === true) {\n      toast.error('You are Restricted from placcing Order,Contact Admin')\n    } else {\n      userCart(cart, user.token)\n        .then((res) => {\n          // console.log('CART DB response', res)\n          if (res.data.ok) {\n            navigate('/checkout')\n          }\n        })\n        .catch((err) => {\n          console.log('CART SAVE ERROR', err)\n          toast.error('CHECK CONSOLE FOR ERROR')\n        })\n    }\n  }\n\n  const showCartItems = () => (\n    <table className='table table-bordered'>\n      <thead className='thead-light'>\n        <tr>\n          <th scope='col'>Image</th>\n          <th scope='col'>Title</th>\n          <th scope='col'>Price</th>\n          <th scope='col'>Brand</th>\n          <th scope='col'>Count</th>\n          <th scope='col'>Remove</th>\n        </tr>\n      </thead>\n      {cart.map((p) => (\n        <ProductCardInCheckout key={p._id} product={p} />\n      ))}\n    </table>\n  )\n\n  return (\n    <div className='container-fluid'>\n      <div className='row'>\n        <div className='col-md-8'>\n          <h4>{cart.length} items in the Cart </h4>\n\n          {!cart.length ? (\n            <p>\n              No Products in the cart <Link to='/'>Continue Shopping</Link>\n            </p>\n          ) : (\n            showCartItems()\n          )}\n        </div>\n        <div className='col-md-4'>\n          <h4>\n            Order Summary <hr />\n            <p>Products</p>\n            {cart.map((c, i) => (\n              <div key={i}>\n                <h5>\n                  {c.title} * {c.count} = ₹{(c.price * c.count)?.toFixed(2)}\n                </h5>\n              </div>\n            ))}\n            <hr />\n            Total : <b>₹{getTotal()}</b>\n            <hr />\n            {user ? (\n              <Button\n                style={{ textDecoration: 'none' }}\n                disabled={cart.length < 1}\n                onClick={saveOrderToDb}\n              >\n                Proceed to Checkout\n              </Button>\n            ) : (\n              <Button>\n                <Link\n                  to={{\n                    pathname: '/login',\n                    state: { from: 'cart' },\n                  }}\n                  style={{ textDecoration: 'none', color: 'black' }}\n                >\n                  Login to Checkout\n                </Link>\n              </Button>\n            )}\n          </h4>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Cart\n"],"names":["useSelector","state","cart","user","navigate","useNavigate","useDispatch","className","length","scope","map","p","product","_id","to","c","i","title","count","price","toFixed","reduce","currentValue","nextValue","style","textDecoration","disabled","onClick","isBlocked","toast","userCart","token","then","res","data","ok","catch","err","console","log","pathname","from","color"],"sourceRoot":""}