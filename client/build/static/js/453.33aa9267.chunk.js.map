{"version":3,"file":"static/js/453.33aa9267.chunk.js","mappings":"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","sources":["pages/admin/subCategory/SubCategoryCreate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  AdminNav,\n  CategoryCreateForm,\n  FormContainer,\n  LocalSearch,\n} from '../../../components'\nimport { useSelector } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport { getCategories, removeCategory } from '../../../api/category'\nimport { Dropdown, OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport {\n  createSubCategory,\n  getSubCategories,\n  getSubCategory,\n  removeSubCategory,\n} from '../../../api/subCategory'\n\nconst SubCategoryCreate = () => {\n  const { user } = useSelector((state) => ({ ...state }))\n\n  const [name, setName] = useState('')\n  const [buttonloading, setButtonLoading] = useState(false)\n  //   const [show, setShow] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [categories, setCategories] = useState([])\n  const [subCategories, setSubCategories] = useState([])\n\n  //parent category\n  const [category, setCategory] = useState('')\n\n  //search while filter\n  const [keyword, setKeyword] = useState('')\n\n  useEffect(() => {\n    loadAllCategories()\n    loadAllSubCategories()\n  }, [])\n\n  const loadAllCategories = () => {\n    getCategories()\n      .then((res) => {\n        setCategories(res.data)\n      })\n      .catch((err) => {\n        toast.error('FETCHING CATEGORY ERROR')\n      })\n  }\n  const loadAllSubCategories = () => {\n    getSubCategories()\n      .then((res) => {\n        setSubCategories(res.data)\n      })\n      .catch((err) => {\n        toast.error('FETCHING CATEGORY ERROR')\n      })\n  }\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    if (!name || name.length < 2) {\n      return toast.error(`Name must be atleast 2 characters`, {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n    }\n\n    if (!category) {\n      return toast.error(`Select the Category`, {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n    }\n    setButtonLoading(true)\n    createSubCategory({ name, parent: category }, user.token)\n      .then((res) => {\n        setButtonLoading(false)\n        setName('')\n        toast.success(`${res.data.name} is created`, {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n        loadAllSubCategories()\n      })\n      .catch((err) => {\n        setButtonLoading(false)\n        toast.error(err, {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n      })\n  }\n\n  const handleDelete = async (slug) => {\n    if (window.confirm(`are you sure wanna delete ${slug}?`)) {\n      setLoading()\n      removeSubCategory(slug, user.token)\n        .then((res) => {\n          setLoading(false)\n          toast.error(`${res.data.name} is Deleted`, {\n            position: 'top-right',\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          })\n          loadAllSubCategories()\n        })\n        .catch((err) => {\n          setLoading(false)\n          toast.error(err.response.data, {\n            position: 'top-right',\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          })\n        })\n    }\n  }\n\n  const handleSearchChange = (e) => {\n    e.preventDefault()\n    setKeyword(e.target.value.toLowerCase())\n  }\n\n  const searched = (keyword) => (c) => c.name.toLowerCase().includes(keyword)\n\n  return (\n    <>\n      {loading ? (\n        <h4 className='text-center'>Loading...</h4>\n      ) : (\n        <div className='container-fluid'>\n          <div className='row'>\n            <div className='col-md-2'>\n              <AdminNav />\n            </div>\n            <div className='col'>\n              <FormContainer>\n                <CategoryCreateForm\n                  submitHandler={submitHandler}\n                  name={name}\n                  setName={setName}\n                  buttonloading={buttonloading}\n                  title={'Create Sub Category'}\n                />\n\n                {name.length > 0 && (\n                  <div className='form-group mb-2'>\n                    <label>\n                      <strong style={{ color: 'black' }}>\n                        Select Category\n                      </strong>\n                    </label>\n                    <select\n                      required={true}\n                      name='category'\n                      className='form-control'\n                      onChange={(e) => setCategory(e.target.value)}\n                    >\n                      <option>---------Please Select Parent--------</option>\n                      {categories &&\n                        categories.length > 0 &&\n                        categories?.map((c) => (\n                          <option key={c._id} value={c._id}>\n                            {c.name}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n                )}\n\n                <LocalSearch\n                  keyword={keyword}\n                  handleSearchChange={handleSearchChange}\n                />\n                {subCategories.filter(searched(keyword)).map((s) => (\n                  <div key={s._id} className='alert alert-success'>\n                    {s.name}\n                    <OverlayTrigger\n                      placement='bottom'\n                      overlay={<Tooltip id='tooltipment'>Delete</Tooltip>}\n                    >\n                      <span className='float-end mx-2'>\n                        <i\n                          className='fa fa-trash  text-danger'\n                          aria-hidden='true'\n                          style={{ cursor: 'pointer' }}\n                          //   onClick={() => setShow(true)}\n                          onClick={() => handleDelete(s.slug)}\n                        ></i>\n                      </span>\n                    </OverlayTrigger>\n\n                    <OverlayTrigger\n                      placement='bottom'\n                      overlay={<Tooltip id='tooltipment'>Edit</Tooltip>}\n                    >\n                      <Link\n                        to={`/admin/subcategory/${s.slug}`}\n                        className='float-end mx-2'\n                      >\n                        <i\n                          className='fa fa-pencil text-primary '\n                          aria-hidden='true'\n                        ></i>\n                      </Link>\n                    </OverlayTrigger>\n                  </div>\n                ))}\n              </FormContainer>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default SubCategoryCreate\n"],"names":["user","useSelector","state","useState","name","setName","buttonloading","setButtonLoading","loading","setLoading","categories","setCategories","subCategories","setSubCategories","category","setCategory","keyword","setKeyword","useEffect","loadAllCategories","loadAllSubCategories","getCategories","then","res","data","catch","err","toast","getSubCategories","handleDelete","slug","window","confirm","removeSubCategory","token","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","response","className","submitHandler","e","preventDefault","length","createSubCategory","parent","title","style","color","required","onChange","target","value","map","c","_id","handleSearchChange","toLowerCase","filter","includes","searched","s","placement","overlay","id","cursor","onClick","to"],"sourceRoot":""}