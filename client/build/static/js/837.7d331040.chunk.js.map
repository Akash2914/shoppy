{"version":3,"file":"static/js/837.7d331040.chunk.js","mappings":"oPAEaA,EAAS,mCAAG,WAAOC,GAAP,iFACVC,IAAAA,IAAA,UAAaC,4BAAb,kBAAwD,CACnEC,QAAS,CACPH,UAAAA,KAHmB,mFAAH,sDAQTI,EAAY,mCAAG,WAAOC,EAASC,EAAaN,GAA7B,iFACbC,IAAAA,IAAA,UACRC,4BADQ,gBAEX,CACEG,QAAAA,EACAC,YAAAA,GAEF,CACEH,QAAS,CACPH,UAAAA,KAToB,mFAAH,0D,iCC+BzB,EApCuB,WACrB,IAAQO,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,MAAtCF,KAER,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACRC,MACC,IAEH,IAAMA,EAAgB,WACpBf,EAAUQ,EAAKQ,OAAOC,MAAK,SAACC,GAC1BL,EAAUK,EAAIC,UAWlB,OACE,gBAAKC,UAAU,kBAAf,UACE,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,SAAC,KAAD,OAEF,gBAAKA,UAAU,MAAf,UACE,SAAC,KAAD,CAAQR,OAAQA,EAAQS,mBAdL,SAACf,EAASC,GACnCF,EAAaC,EAASC,EAAaC,EAAKQ,OAAOC,MAAK,SAACC,GACnDI,EAAAA,GAAAA,QAAc,kBACdP","sources":["api/admin.js","pages/admin/AdminDashboard.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport const getOrders = async (authtoken) => {\r\n  return await axios.get(`${process.env.REACT_APP_API}/getOrderAdmin`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  })\r\n}\r\n\r\nexport const changeStatus = async (orderId, orderStatus, authtoken) => {\r\n  return await axios.put(\r\n    `${process.env.REACT_APP_API}/orderStatus`,\r\n    {\r\n      orderId,\r\n      orderStatus,\r\n    },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { AdminNav, Orders } from '../../components'\r\nimport { getOrders, changeStatus } from '../../api/admin'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nconst AdminDashboard = () => {\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n\r\n  const [orders, setOrders] = useState([])\r\n\r\n  useEffect(() => {\r\n    loadAllOrders()\r\n  }, [])\r\n\r\n  const loadAllOrders = () => {\r\n    getOrders(user.token).then((res) => {\r\n      setOrders(res.data)\r\n    })\r\n  }\r\n\r\n  const handleStatusChange = (orderId, orderStatus) => {\r\n    changeStatus(orderId, orderStatus, user.token).then((res) => {\r\n      toast.success('Status Updated')\r\n      loadAllOrders()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          <Orders orders={orders} handleStatusChange={handleStatusChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminDashboard\r\n"],"names":["getOrders","authtoken","axios","process","headers","changeStatus","orderId","orderStatus","user","useSelector","state","useState","orders","setOrders","useEffect","loadAllOrders","token","then","res","data","className","handleStatusChange","toast"],"sourceRoot":""}