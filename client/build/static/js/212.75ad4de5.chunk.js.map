{"version":3,"file":"static/js/212.75ad4de5.chunk.js","mappings":"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","sources":["pages/admin/subCategory/SubCategoryUpdate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  AdminNav,\n  CategoryCreateForm,\n  FormContainer,\n} from '../../../components'\nimport { useSelector } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport { getCategories } from '../../../api/category'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { getSubCategory, updateSubCategory } from '../../../api/subCategory'\n\nconst SubCategoryUpdate = () => {\n  const { user } = useSelector((state) => ({ ...state }))\n\n  const [name, setName] = useState('')\n  const [buttonloading, setButtonLoading] = useState(false)\n  //   const [show, setShow] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [categories, setCategories] = useState([])\n  const [parent, setParent] = useState('')\n\n  //parent category\n\n  let { slug } = useParams()\n\n  const navigate = useNavigate()\n\n  //search while filter\n  const [keyword, setKeyword] = useState('')\n\n  useEffect(() => {\n    loadAllCategories()\n    loadSubCategory()\n  }, [])\n\n  const loadAllCategories = () => {\n    getCategories()\n      .then((res) => {\n        setCategories(res.data)\n      })\n      .catch((err) => {\n        toast.error('FETCHING CATEGORY ERROR')\n      })\n  }\n  const loadSubCategory = () => {\n    getSubCategory(slug)\n      .then((res) => {\n        setName(res.data.subCategory.name)\n        setParent(res.data.subCategory.parent)\n      })\n      .catch((err) => {\n        toast.error('FETCHING CATEGORY ERROR')\n      })\n  }\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    if (!name || name.length < 2) {\n      return toast.error(`Name must be atleast 2 characters`, {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n    }\n\n    if (!parent) {\n      return toast.error(`Select the Category`, {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n    }\n    setButtonLoading(true)\n    updateSubCategory(slug, { name, parent }, user.token)\n      .then((res) => {\n        setButtonLoading(false)\n\n        toast.success(`${res.data.name} is created`, {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n        navigate(-1)\n      })\n      .catch((err) => {\n        setButtonLoading(false)\n        toast.error(err, {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        })\n      })\n  }\n\n  return (\n    <>\n      {loading ? (\n        <h4 className='text-center '>Loading...</h4>\n      ) : (\n        <div className='container-fluid'>\n          <div className='row'>\n            <div className='col-md-2'>\n              <AdminNav />\n            </div>\n            <div className='col'>\n              <FormContainer>\n                <CategoryCreateForm\n                  submitHandler={submitHandler}\n                  name={name}\n                  setName={setName}\n                  buttonloading={buttonloading}\n                  title={'Update Sub Category'}\n                />\n\n                <div className='form-group mb-2'>\n                  <label>\n                    <strong>Select Category</strong>\n                  </label>\n                  <select\n                    required={true}\n                    name='category'\n                    className='form-control'\n                    onChange={(e) => setParent(e.target.value)}\n                    value={parent._id}\n                  >\n                    {categories &&\n                      categories.length > 0 &&\n                      categories?.map((c) => (\n                        <option\n                          key={c._id}\n                          value={c._id}\n                          selected={c._id === parent}\n                        >\n                          {c.name}\n                        </option>\n                      ))}\n                  </select>\n                </div>\n              </FormContainer>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default SubCategoryUpdate\n"],"names":["user","useSelector","state","useState","name","setName","buttonloading","setButtonLoading","loading","categories","setCategories","parent","setParent","slug","useParams","navigate","useNavigate","useEffect","loadAllCategories","loadSubCategory","getCategories","then","res","data","catch","err","toast","getSubCategory","subCategory","className","submitHandler","e","preventDefault","length","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","updateSubCategory","token","title","required","onChange","target","value","_id","map","c","selected"],"sourceRoot":""}